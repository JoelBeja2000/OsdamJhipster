package com.osdam.osdam.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class VoluntariadoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVoluntariadoAllPropertiesEquals(Voluntariado expected, Voluntariado actual) {
        assertVoluntariadoAutoGeneratedPropertiesEquals(expected, actual);
        assertVoluntariadoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVoluntariadoAllUpdatablePropertiesEquals(Voluntariado expected, Voluntariado actual) {
        assertVoluntariadoUpdatableFieldsEquals(expected, actual);
        assertVoluntariadoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVoluntariadoAutoGeneratedPropertiesEquals(Voluntariado expected, Voluntariado actual) {
        assertThat(expected)
            .as("Verify Voluntariado auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVoluntariadoUpdatableFieldsEquals(Voluntariado expected, Voluntariado actual) {
        assertThat(expected)
            .as("Verify Voluntariado relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getFechaInicio()).as("check fechaInicio").isEqualTo(actual.getFechaInicio()))
            .satisfies(e -> assertThat(e.getFechaFin()).as("check fechaFin").isEqualTo(actual.getFechaFin()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVoluntariadoUpdatableRelationshipsEquals(Voluntariado expected, Voluntariado actual) {
        assertThat(expected)
            .as("Verify Voluntariado relationships")
            .satisfies(e -> assertThat(e.getDepartamento()).as("check departamento").isEqualTo(actual.getDepartamento()));
    }
}
